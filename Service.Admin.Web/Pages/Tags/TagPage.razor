@page "/tagData"
@using Service.Admin.Web.Communication.Tags
@using Service.Admin.Web.Communication.Tags.State
@rendermode InteractiveServer
@inject ITagStateService TagStateService
@inject ITagController TagController

@code {

    protected override Task OnInitializedAsync()
    {
        TagStateService.OnStateChanged += async () => await InvokeAsync(StateHasChanged);
        return Task.CompletedTask;
    }

}

<div class="row">
    <div class="col-5">
        <h2>Tags</h2>
        <div class="mb-2">
            <label>Name</label>
            <input @bind="@TagController.InputTagName" class="form-control"/>
        </div>
        <div class="mb-2">
            <button class="btn btn-success me-2"
                    disabled="@(string.IsNullOrWhiteSpace(@TagController.InputTagName))"
                    @onclick="@(async () => await @TagController.PersistTag())">Save
            </button>
            <button class="btn btn-warning me-2"
                    disabled="@(@TagController.SelectedTag == null)"
                    @onclick="TagController.ToggleTagEditMode">@(@TagController.IsEditMode ? "Cancel Edit" : "Edit")</button>
        </div>
    </div>
    <div class="col-7">
        <table class="table table-bordered table-sm">
            <thead>
            <tr>
                <th>Tag Name</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var tag in TagStateService.Tickets)
            {
                <tr class="@(@TagController.SelectedTag == tag ? "table-active" : "")"
                    @onclick="() => TagController.SelectedTag = tag">
                    <td>@tag.Name</td>
                </tr>
            }
            </tbody>
        </table>
    </div>
</div>