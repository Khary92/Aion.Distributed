@using Service.Admin.Web.Communication.Tickets
@using Service.Admin.Web.Communication.Tickets.State
@rendermode InteractiveServer
@inject ITicketStateService TicketStateService
@inject ITicketController TicketController

@code {

    protected override Task OnInitializedAsync()
    {
        TicketStateService.OnStateChanged += async () => await InvokeAsync(StateHasChanged);
        return Task.CompletedTask;
    }

}

<div class="row">
    <div class="col-5">
        <h2>Tickets</h2>
        <div class="mb-2">
            <label>Ticket name</label>
            <input @bind="@TicketController.NewTicketName" class="form-control"/>
        </div>
        <div class="mb-2">
            <label>Booking number</label>
            <input @bind="@TicketController.NewTicketBookingNumber" class="form-control"/>
        </div>
        <div class="mb-2">
            <button class="btn btn-success me-2"
                    disabled="@(!CanSave)"
                    @onclick="@(async () => await TicketController.CreateOrUpdateTicket())">Save
            </button>
            <button class="btn btn-warning me-2"
                    disabled="@(@TicketController.SelectedTicket == null)"
                    @onclick="@TicketController.SetEditMode">@EditButtonText</button>
            <button class="btn btn-primary me-2"
                    disabled="@(@TicketController.SelectedTicket == null)"
                    @onclick="@(async () => await TicketController.AddTicketToCurrentSprint())">Add to sprint
            </button>
            <input type="checkbox" @bind="@TicketController.IsShowAllTicketsActive"/>
            <span class="ms-2">Show all tickets</span>
        </div>
    </div>
    <div class="col-7">
        <table class="custom-table">
            <thead>
            <tr>
                <th>Name</th>
                <th>Booking number</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var ticket in TicketStateService.Tickets)
            {
                <tr class="@(@TicketController.SelectedTicket == ticket ? "table-active" : "")"
                    @onclick="() => TicketController.SelectedTicket = ticket">
                    <td>@ticket.Name</td>
                    <td>@ticket.BookingNumber</td>
                </tr>
            }
            </tbody>
        </table>
    </div>
</div>

@code {

    private bool CanSave => !string.IsNullOrWhiteSpace(@TicketController.NewTicketName)
                            && !string.IsNullOrWhiteSpace(@TicketController.NewTicketBookingNumber);

    private string EditButtonText => @TicketController.IsEditMode ? "Cancel Edit" : "Edit";
}